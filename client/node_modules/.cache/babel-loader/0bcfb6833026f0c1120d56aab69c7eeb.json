{"ast":null,"code":"var _jsxFileName = \"/home/shinyeong/pratice/socket/chat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\"\n  });\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\"); // 서버에서 message라는 이벤트를 받으면, 콜백함수로 받은 데이터를 처리해준다.\n    // 받은 데이터는 setChat으로 처리해준다.\n\n    socketRef.current.on(\"message\", _ref => {\n      let {\n        name,\n        message\n      } = _ref;\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    const {\n      name,\n      message\n    } = state;\n    socketRef.current.emit(\"message\", {\n      name,\n      message\n    });\n    e.preventDefault();\n    setState({\n      message: \"\",\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map((_ref2, index) => {\n      let {\n        name,\n        message\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messenger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-field\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"name\",\n          onChange: e => onTextChange(e),\n          value: state.name,\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          onChange: e => onTextChange(e),\n          value: state.message,\n          id: \"outlined-multiline-static\",\n          variant: \"outlined\",\n          label: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+7JBAXl6HV/w5dhYLrqY1Yih/bI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shinyeong/pratice/socket/chat/src/App.js"],"names":["TextField","React","useEffect","useRef","useState","io","App","state","setState","message","name","chat","setChat","socketRef","current","connect","on","disconnect","onTextChange","e","target","value","onMessageSubmit","emit","preventDefault","renderChat","map","index"],"mappings":"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","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState({ message: \"\", name: \"\" });\n  const [chat, setChat] = useState([]);\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"http://localhost:4000\");\n    // 서버에서 message라는 이벤트를 받으면, 콜백함수로 받은 데이터를 처리해준다.\n    // 받은 데이터는 setChat으로 처리해준다.\n    socketRef.current.on(\"message\", ({ name, message }) => {\n      setChat([...chat, { name, message }]);\n    });\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n\n  const onTextChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    const { name, message } = state;\n    socketRef.current.emit(\"message\", { name, message });\n    e.preventDefault();\n    setState({ message: \"\", name });\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}: <span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      <form onSubmit={onMessageSubmit}>\n        <h1>Messenger</h1>\n        <div className=\"name-field\">\n          <TextField\n            name=\"name\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          />\n        </div>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}