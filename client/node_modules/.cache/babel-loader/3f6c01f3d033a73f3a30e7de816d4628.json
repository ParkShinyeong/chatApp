{"ast":null,"code":"var _jsxFileName = \"/home/shinyeong/pratice/socket/chat/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:4000\");\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    message: \"\",\n    name: \"\"\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    // 서버에서 message 이벤트를 받아 콜백함수를 통해 데이터를 처리한다.\n    socket.on(\"message\", _ref => {\n      let {\n        name,\n        message\n      } = _ref;\n      // 기존의 채팅과 서버에서 받은 새로운 채팅으로 채팅 목록을 구성한다.\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  }); // 사용자 이름과, 사용자가 쓴 메시지의 상태를 바꿔준다.\n\n  const onTextChange = e => {\n    console.log(e.target.value);\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    // preventDefault=> 해당 이벤트에 대한 사용자 에이전트의 기본 동작을 실행하지 않도록 지정한다.\n    // 이벤트 처리를 종료하고 form의 action 처리를 방지한다.\n    // onsubmit 이벤트 =>  input 태그의 데이터를 서버에 전송하기 전 동작을 지정\n    // onsubmit 이벤트가 종료된 후 action 처리를 방지한다.\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state; // 아마 preventDefault를 사용하는 이유는 form 태그를 통해서 서버에 데이터를 전송하는 것이 아닌\n    // socket.emit을 통해서 이벤트와 정보를 서버에 보내기 위해서이지 않을까 싶다! (나의 뇌피셜..)\n\n    socket.emit(\"message\", {\n      name,\n      message\n    });\n    setState({\n      message: \"\",\n      name\n    });\n  };\n\n  const renderChat = () => {\n    return chat.map((_ref2, index) => {\n      let {\n        name,\n        message\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [name, \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          label: \"Name\",\n          name: \"name\",\n          id: \"outlined-multiline-static\",\n          onChange: e => onTextChange(e),\n          value: state.name || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          label: \"Message\",\n          type: \"text\",\n          id: \"outlined-multiline-static\",\n          onChange: e => onTextChange(e),\n          value: state.message || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"render-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v74o7h5qTTtgL/DwRz/d7ttPTtE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shinyeong/pratice/socket/chat/src/App.js"],"names":["React","useState","useEffect","io","TextField","socket","connect","App","state","setState","message","name","chat","setChat","on","onTextChange","e","console","log","target","value","onMessageSubmit","preventDefault","emit","renderChat","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000\");\n\nfunction App() {\n  const [state, setState] = useState({ message: \"\", name: \"\" });\n  const [chat, setChat] = useState([]);\n\n  useEffect(() => {\n    // 서버에서 message 이벤트를 받아 콜백함수를 통해 데이터를 처리한다.\n    socket.on(\"message\", ({ name, message }) => {\n      // 기존의 채팅과 서버에서 받은 새로운 채팅으로 채팅 목록을 구성한다.\n      setChat([...chat, { name, message }]);\n    });\n  });\n\n  // 사용자 이름과, 사용자가 쓴 메시지의 상태를 바꿔준다.\n  const onTextChange = (e) => {\n    console.log(e.target.value);\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    // preventDefault=> 해당 이벤트에 대한 사용자 에이전트의 기본 동작을 실행하지 않도록 지정한다.\n    // 이벤트 처리를 종료하고 form의 action 처리를 방지한다.\n    // onsubmit 이벤트 =>  input 태그의 데이터를 서버에 전송하기 전 동작을 지정\n    // onsubmit 이벤트가 종료된 후 action 처리를 방지한다.\n    e.preventDefault();\n    const { name, message } = state;\n    // 아마 preventDefault를 사용하는 이유는 form 태그를 통해서 서버에 데이터를 전송하는 것이 아닌\n    // socket.emit을 통해서 이벤트와 정보를 서버에 보내기 위해서이지 않을까 싶다! (나의 뇌피셜..)\n    socket.emit(\"message\", { name, message });\n    setState({ message: \"\", name });\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        <h3>\n          {name}:<span>{message}</span>\n        </h3>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      {/* form 안의 button을 클릭하면, onsubmit 에 들어있는 함수를 통해 동작을 처리한다. \n      이 때 onMessageSubmit함수를 넣어주었다. \n      ex) onSubmit=\"return test()\" => test()라는 처리를 반환한다. \n       */}\n      <form onSubmit={onMessageSubmit}>\n        <h1>Message</h1>\n        <div className=\"name-field\">\n          {/* <TextField\n            name=\"name\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          /> */}\n          <input\n            type=\"text\"\n            label=\"Name\"\n            name=\"name\"\n            id=\"outlined-multiline-static\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name || \"\"}\n          ></input>\n        </div>\n        <div>\n          {/* <TextField\n            name=\"message\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          /> */}\n          <input\n            name=\"message\"\n            label=\"Message\"\n            type=\"text\"\n            id=\"outlined-multiline-static\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message || \"\"}\n          ></input>\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}