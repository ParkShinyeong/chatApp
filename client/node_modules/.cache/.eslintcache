[{"/home/shinyeong/pratice/socket/chat/src/index.js":"1","/home/shinyeong/pratice/socket/chat/src/App.js":"2","/home/shinyeong/pratice/socket/chat/src/reportWebVitals.js":"3"},{"size":500,"mtime":1643958448337,"results":"4","hashOfConfig":"5"},{"size":3710,"mtime":1643977710270,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1643958448341,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10y2dgr",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shinyeong/pratice/socket/chat/src/index.js",[],[],"/home/shinyeong/pratice/socket/chat/src/App.js",["18"],[],"import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\n\nconst socket = io.connect(\"http://localhost:4000\");\n\nfunction App() {\n  const [state, setState] = useState({ message: \"\", name: \"\" });\n  const [chat, setChat] = useState([]);\n\n  useEffect(() => {\n    // 서버에서 message 이벤트를 받아 콜백함수를 통해 데이터를 처리한다.\n    socket.on(\"message\", ({ name, message }) => {\n      // 기존의 채팅과 서버에서 받은 새로운 채팅으로 채팅 목록을 구성한다.\n      setChat([...chat, { name, message }]);\n    });\n  });\n\n  // 사용자 이름과, 사용자가 쓴 메시지의 상태를 바꿔준다.\n  const onTextChange = (e) => {\n    console.log(e.target.value);\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const onMessageSubmit = (e) => {\n    // preventDefault=> 해당 이벤트에 대한 사용자 에이전트의 기본 동작을 실행하지 않도록 지정한다.\n    // 이벤트 처리를 종료하고 form의 action 처리를 방지한다.\n    // onsubmit 이벤트 =>  input 태그의 데이터를 서버에 전송하기 전 동작을 지정\n    // onsubmit 이벤트가 종료된 후 action 처리를 방지한다.\n    e.preventDefault();\n    const { name, message } = state;\n    // 아마 preventDefault를 사용하는 이유는 form 태그를 통해서 서버에 데이터를 전송하는 것이 아닌\n    // socket.emit을 통해서 이벤트와 정보를 서버에 보내기 위해서이지 않을까 싶다! (나의 뇌피셜..)\n    socket.emit(\"message\", { name, message });\n    setState({ message: \"\", name });\n  };\n\n  const renderChat = () => {\n    return chat.map(({ name, message }, index) => (\n      <div key={index}>\n        {name}:<span>{message}</span>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"card\">\n      {/* form 안의 button을 클릭하면, onsubmit 에 들어있는 함수를 통해 동작을 처리한다. \n      이 때 onMessageSubmit함수를 넣어주었다. \n      ex) onSubmit=\"return test()\" => test()라는 처리를 반환한다. \n       */}\n      <form onSubmit={onMessageSubmit}>\n        <h1>Message</h1>\n        <div className=\"name-field\">\n          {/* <TextField\n            name=\"name\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name}\n            label=\"Name\"\n          /> */}\n          <input\n            type=\"text\"\n            // label=\"Name\"\n            // name 속성은 폼이 제출된 후 서버에서 폼 데이터를 참조하기 위해 사용된다고 한다.\n            // 그러나 나같은 경우는 onTextChange를 지정해줄 때 name 속성값을 참조하여 name, 혹은 message를 지정하여 값을 바꾸어주는 것 같다.\n            //\n            name=\"name\"\n            id=\"outlined-multiline-static\"\n            onChange={(e) => onTextChange(e)}\n            value={state.name || \"\"}\n          ></input>\n        </div>\n        <div>\n          {/* <TextField\n            name=\"message\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          /> */}\n          <input\n            name=\"message\"\n            type=\"text\"\n            id=\"outlined-multiline-static\"\n            onChange={(e) => onTextChange(e)}\n            value={state.message || \"\"}\n          ></input>\n        </div>\n        <button>Send Message</button>\n      </form>\n      <div className=\"render-chat\">\n        <h1>Chat log</h1>\n        {renderChat()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/shinyeong/pratice/socket/chat/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":3,"column":8,"nodeType":"21","messageId":"22","endLine":3,"endColumn":17},"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar"]